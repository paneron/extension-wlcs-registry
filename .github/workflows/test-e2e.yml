name: test

on:
  workflow_call:
  workflow_dispatch:

env:
  PANERON_CACHE_DIR: installs
  CACHE_DIR: dist
  CACHE_TEST_DIR: cache-test-e2e
  MAIN_PACKAGE_PATH: .
  PANERON_TEST_DIR_NAME: paneron-for-tests

jobs:
  test-e2e:
    name: E2E Test
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        # os: [ubuntu-latest, macos-latest, windows-latest]
        os:
          - macos-latest
          # - ubuntu-latest # XXX: Skipping Linux since e2e tests show tooling problems (#96)
          - windows-latest
        node:
          - '20.x'
        paneron_ref: ['v2.2.4']

    steps:
      - name: Check out repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Calculate build-cache key
        # Because the exact same hashFiles invocation produces different
        # results down the file
        id: build-cache-key
        run: |
          if command -v shasum; then sum() { shasum -a 256 "$@"; } ; else sum() { sha256sum "$@"; }; fi
          fragment=$(< package.json command grep 'version"\|"name"\|"files"\|"main"\|"build' | sum | command head -c8)
          runner_os=${{ runner.os }}

          # Make Windows use compiled outputs from other OS (anything but Windows)
          if [[ ${{ runner.os }} == "windows-"* ]]; then
            runner_os=macos-latest
          fi

          echo "key=build-$runner_os-${{ matrix.node }}-${{ hashFiles('**/src/**', '**/.swcrc', '**/.npmrc', '**/tsconfig*.json', '**/pnpm-lock.yaml', '.github/workflows/build.yml') }}-${fragment}" | tee -a $GITHUB_OUTPUT
        shell: bash

      - name: Calculate a fragment of cache key
        id: cache-key
        run: |
          if command -v shasum; then sum() { shasum -a 256 "$@"; } ; else sum() { sha256sum "$@"; }; fi
          echo "fragment=$(< package.json command grep '"test:e2e"' | sum | command head -c8)" >> $GITHUB_OUTPUT
        shell: bash

      - name: Restore test cache
        id: test_cache
        uses: actions/cache@v3
        with:
          path: ${{ env.CACHE_TEST_DIR }}
          key: tests-e2e-${{ runner.os }}-${{ matrix.node }}-${{ hashFiles('e2e_tests/**', '**/src/**', '**/.swcrc', '**/.npmrc', 'tsconfig*.json', '**/pnpm-lock.yaml', '.github/workflows/build.yml', '.github/workflows/test-e2e.yml') }}-${{ steps.cache-key.outputs.fragment }}

      - name: Set up Node JS
        if: steps.test_cache.outputs.cache-hit != 'true'
        uses: actions/setup-node@v3
        id: setup-node
        with:
          node-version: ${{ matrix.node }}

      - uses: pnpm/action-setup@v2
        if: steps.test_cache.outputs.cache-hit != 'true'
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      # See: https://github.com/pnpm/action-setup#use-cache-to-reduce-installation-time
      - name: Get pnpm store directory
        if: steps.test_cache.outputs.cache-hit != 'true'
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        if: steps.test_cache.outputs.cache-hit != 'true'
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/.npmrc', '**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Restore Paneron cache
        if: steps.test_cache.outputs.cache-hit != 'true'
        id: paneron_build_cache
        uses: actions/cache@v3
        with:
          path: ${{ env.PANERON_CACHE_DIR }}
          key: build-${{ runner.os }}-${{ matrix.node }}-${{ matrix.paneron_ref }}-${{ hashFiles('.github/workflows/test-e2e.yml') }}

      - name: Check out Paneron repo
        uses: actions/checkout@v3
        if: ${{ steps.paneron_build_cache.outputs.cache-hit != 'true' && steps.test_cache.outputs.cache-hit != 'true' }}
        with:
          repository: 'paneron/paneron'
          fetch-depth: 1
          path: ${{ env.PANERON_CACHE_DIR }}/${{ env.PANERON_TEST_DIR_NAME }}
          ref: ${{ matrix.paneron_ref }}

      - name: Build Paneron cache
        if: ${{ steps.paneron_build_cache.outputs.cache-hit != 'true' && steps.test_cache.outputs.cache-hit != 'true' }}
        shell: bash
        run: |
          pushd ${{ env.PANERON_CACHE_DIR }}/${{ env.PANERON_TEST_DIR_NAME }}
          # Work around node js 17+ OpenSSL
          if [[ ${{ matrix.node }} = 18* ]]; then \
            export NODE_OPTIONS=--openssl-legacy-provider; \
          fi
          # NOTE: Switch to pnpm when Paneron switches to pnpm.
          # pnpm install --frozen-lockfile --strict-peer-dependencies
          # pnpm run compile
          yarn install --frozen-lockfile
          yarn compile
          unset NODE_OPTIONS # Unset otherwise GitHub action for Restore Cache would complain about "--openssl-legacy-provider is not allowed in NODE_OPTIONS"
          popd

      - name: Install dependencies
        if: steps.test_cache.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile --strict-peer-dependencies

      # For issue 'electron.launch: Process failed to launch'
      # @see https://github.com/microsoft/playwright/issues/11932
      - if: ${{ steps.test_cache.outputs.cache-hit != 'true' && startsWith(runner.os, 'linux') }}
        run: |
          sudo apt-get install -y xvfb

      - name: Restore build cache
        if: steps.test_cache.outputs.cache-hit != 'true'
        uses: actions/cache@v3
        with:
          path: ${{ env.CACHE_DIR }}
          key: ${{ steps.build-cache-key.outputs.key }}

      - if: ${{ steps.test_cache.outputs.cache-hit != 'true' }}
        uses: GabrielBB/xvfb-action@v1.6
        with:
          run: pnpm run test:e2e
          # working-directory: ./ #optional
          options: "-screen 0 1280x960x24"

      - if: ${{ steps.test_cache.outputs.cache-hit != 'true' }}
        run: |
          mkdir -p ${{ env.CACHE_TEST_DIR }}
          touch ${{ env.CACHE_TEST_DIR }}/pass
